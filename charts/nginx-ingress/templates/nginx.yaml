---
apiVersion: v1
kind: ReplicationController
metadata:
  name: {{ .Values.nginx.name }}-ingress-controller
spec:
  replicas: {{ .Values.nginx.replicas }}
  template:
    metadata:
      labels:
        app:  {{ .Values.nginx.name }}-ingress-controller
    spec:
      containers:
      - name: {{ .Values.nginx.name }}-ingress-lb
        image: {{ .Values.nginx.image }}
        imagePullPolicy: {{ .Values.nginx.imagePullPolicy }}
        readinessProbe:
          httpGet:
            path: {{ .Values.nginx.probePath }}
            port: {{ .Values.nginx.probePort }}
            scheme: {{ .Values.nginx.probeScheme }}
        livenessProbe:
          httpGet:
            path: {{ .Values.nginx.probePath }}
            port: {{ .Values.nginx.probePort }}
            scheme: {{ .Values.nginx.probeScheme }}
        resources:
          requests:
            cpu: {{ .Values.nginx.resources.cpu }}
            memory: {{ .Values.nginx.resources.memory }}
        # use downward API
        env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        ports:
        - containerPort: 80
          hostPort: 80
        - containerPort: 443
          hostPort: 443
        args:
        - /nginx-ingress-controller
        - --default-backend-service=$(POD_NAMESPACE)/http-backend
        - --configmap=$(POD_NAMESPACE)/nginx-ingress-controller


---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.nginx.name }}-svc
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 80
    nodePort: 32079
    protocol: TCP
    name: http
  - port: 443
    targetPort: 443
    nodePort: 32443
    protocol: TCP
    name: https
  selector:
    app: {{ .Values.nginx.name }}-svc